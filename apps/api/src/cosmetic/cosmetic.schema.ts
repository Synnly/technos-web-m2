import { Prop, Schema, SchemaFactory } from "@nestjs/mongoose";

export type CosmeticDocument = Cosmetic & Document;

/**
 * √ânum√©ration des types de cosm√©tiques disponibles
 * Permet d'avoir un filtrage rapide des cosm√©tiques par type
 * - BADGE : Repr√©sente une icon de type : üî∞, ‚öúÔ∏è..., que l'utilisateur peut afficher
 * - COLOR : Repr√©sente une couleur que l'utilisateur peut appliquer √† son pseudo
 * Permet d'ajouter facilement de nouveaux types de cosm√©tiques √† l'avenir et des champs
 * optionnels sp√©cifiques √† chaque type
 */
export enum CosmeticType {
	BADGE = "badge",
	COLOR = "color",
}

/**
 * Sch√©ma repr√©sentant un cosm√©tique
 */
@Schema()
export class Cosmetic {
	/** Identifiant unique */
	_id: string;

	/** Nom du cosm√©tique
	 * Ce champ est requis
	 */
	@Prop({ required: true })
	name: string;

	/** Co√ªt du cosm√©tique
	 * Ce champ est requis
	 */
	@Prop({ required: true })
	cost: number;

	/** Type du cosm√©tique
	 * Ce champ est requis et doit √™tre l'une des valeurs d√©finies dans l'√©num√©ration CosmeticType
	 */
	@Prop({ required: true, enum: CosmeticType })
	type: CosmeticType;

	/**
	 * Code hexad√©cimal de la couleur pour les cosm√©tiques de type "color"
	 */
	@Prop()
	hexColor?: string;

    /**
     * Si le cosm√©tique est poss√©d√©
     */
    @Prop({ default: false })
    owned?: boolean;
}

export const CosmeticSchema = SchemaFactory.createForClass(Cosmetic);